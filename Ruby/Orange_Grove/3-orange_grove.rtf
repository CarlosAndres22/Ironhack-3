{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 HelveticaNeue-Medium;\f4\fnil\fcharset0 Menlo-Bold;\f5\fnil\fcharset0 Menlo-Italic;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red184\green14\blue61;\red247\green238\blue241;
\red15\green112\blue1;\red242\green242\blue242;\red0\green0\blue255;\red83\green83\blue83;\red115\green0\blue2;
\red51\green110\blue109;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww19000\viewh13220\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
I
\f1\fs28 We've built a simple model of a single fruit and a single fruit tree with our 
\f2\fs22 \cf3 \cb4 Orange
\f1\fs28 \cf2 \cb1  and 
\f2\fs22 \cf3 \cb4 OrangeTree
\f1\fs28 \cf2 \cb1  classes. Let's expand it to a whole grove with multiple kinds of trees.\
\pard\pardeftab720\sl400\sa200\partightenfactor0
\cf2 By the end we'll have classes like 
\f2\fs22 \cf3 \cb4 FruitGrove
\f1\fs28 \cf2 \cb1 , 
\f2\fs22 \cf3 \cb4 AppleTree
\f1\fs28 \cf2 \cb1 , and 
\f2\fs22 \cf3 \cb4 PearTree
\f1\fs28 \cf2 \cb1 .\
\pard\pardeftab720\sl800\sa200\partightenfactor0

\f3\fs60 \cf2 Learning Objectives\
\pard\pardeftab720\sl400\sa200\partightenfactor0

\f1\fs28 \cf2 This challenge will be our first substantial encounter with inheritance.\
\pard\pardeftab720\sl800\sa200\partightenfactor0

\f3\fs60 \cf2 Objectives\
\pard\pardeftab720\sl600\sa200\partightenfactor0

\fs48 \cf2 The 
\f2\fs22 \cf3 \cb4 AppleTree
\f3\fs48 \cf2 \cb1  and 
\f2\fs22 \cf3 \cb4 Apple
\f3\fs48 \cf2 \cb1  Classes\
\pard\pardeftab720\sl400\sa200\partightenfactor0

\f1\fs28 \cf2 Let's start by defining 
\f2\fs22 \cf3 \cb4 AppleTree
\f1\fs28 \cf2 \cb1  and 
\f2\fs22 \cf3 \cb4 Apple
\f1\fs28 \cf2 \cb1  classes. They should behave the same as 
\f2\fs22 \cf3 \cb4 OrangeTree
\f1\fs28 \cf2 \cb1 , although have a different life cycle.\
That is, they should support all the same methods, but the particularities might differ: apples have a smaller diameter but apple trees bear fruit sooner and bear more fruit when they do.\
Creating the 
\f2\fs22 \cf3 \cb4 Apple
\f1\fs28 \cf2 \cb1  and 
\f2\fs22 \cf3 \cb4 AppleTree
\f1\fs28 \cf2 \cb1  class at this stage shouldn't involve much more than copying your 
\f2\fs22 \cf3 \cb4 Orange
\f1\fs28 \cf2 \cb1  and
\f2\fs22 \cf3 \cb4 OrangeTree
\f1\fs28 \cf2 \cb1  classes and changing a few variables or constants. If it's more complicated than that ask for help!\
\pard\pardeftab720\sl600\sa200\partightenfactor0

\f3\fs48 \cf2 The 
\f2\fs22 \cf3 \cb4 FruitTree
\f3\fs48 \cf2 \cb1  and 
\f2\fs22 \cf3 \cb4 Fruit
\f3\fs48 \cf2 \cb1  Classes\
\pard\pardeftab720\sl400\sa200\partightenfactor0

\f1\fs28 \cf2 You now have two kinds of trees which each bear their own fruits. They have tons of code in common. One way to deal with this repetition is to 
\b abstract out
\b0  the common parts into a parent class. We'll call that parent class 
\f2\fs22 \cf3 \cb4 FruitTree
\f1\fs28 \cf2 \cb1 , so your
\f2\fs22 \cf3 \cb4 OrangeTree
\f1\fs28 \cf2 \cb1  class should now look like:\
\pard\pardeftab720\sl320\partightenfactor0

\f4\b\fs24 \cf5 \cb6 class
\f2\b0 \cf2  
\f4\b \cf7 OrangeTree
\f2\b0 \cf2  \cf8 <\cf2  \cf9 FruitTree\cf2 \
  
\f5\i \cf10 # code goes here
\f2\i0 \cf2 \

\f4\b \cf5 end
\f2\b0 \cf2 \
\pard\pardeftab720\sl400\sa200\partightenfactor0

\f1\fs28 \cf2 \cb1 Think carefully about the parameters that make an orange tree different from an apple tree. They might include parameters like\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
How much the tree grows each year\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
How old the tree must be before it stops growing\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
How old the tree must be before it bares fruit\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4.	}\expnd0\expndtw0\kerning0
How much fruit the tree yields each year\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5.	}\expnd0\expndtw0\kerning0
Maybe most importantly, what 
\i kind
\i0  of fruit it bares\
\pard\pardeftab720\sl400\sa200\partightenfactor0
\cf2 There could be others, but this gives you an idea of some of the "parameters" that differentiate one fruit tree's behavior from another.\
\pard\pardeftab720\sl600\sa200\partightenfactor0

\f3\fs48 \cf2 The 
\f2\fs22 \cf3 \cb4 PearTree
\f3\fs48 \cf2 \cb1  and 
\f2\fs22 \cf3 \cb4 Pear
\f3\fs48 \cf2 \cb1  Classes\
\pard\pardeftab720\sl400\sa200\partightenfactor0

\f1\fs28 \cf2 Now that you have 
\f2\fs22 \cf3 \cb4 FruitTree
\f1\fs28 \cf2 \cb1  and 
\f2\fs22 \cf3 \cb4 Fruit
\f1\fs28 \cf2 \cb1  classes, create a 
\f2\fs22 \cf3 \cb4 PearTree
\f1\fs28 \cf2 \cb1  class that yields 
\f2\fs22 \cf3 \cb4 Pears
\f1\fs28 \cf2 \cb1 , just like 
\f2\fs22 \cf3 \cb4 OrangeTree
\f1\fs28 \cf2 \cb1  and
\f2\fs22 \cf3 \cb4 AppleTree
\f1\fs28 \cf2 \cb1 .\
\pard\pardeftab720\sl600\sa200\partightenfactor0

\f3\fs48 \cf2 Create a 
\f2\fs22 \cf3 \cb4 TreeGrove
\f3\fs48 \cf2 \cb1  Class\
\pard\pardeftab720\sl400\sa200\partightenfactor0

\f1\fs28 \cf2 Let's plant some trees! Create a 
\f2\fs22 \cf3 \cb4 TreeGrove
\f1\fs28 \cf2 \cb1  class that works as follows.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
You can initialize a 
\f2\fs22 \cf3 \cb4 TreeGrove
\f1\fs28 \cf2 \cb1  with an 
\f2\fs22 \cf3 \cb4 Array
\f1\fs28 \cf2 \cb1  of any kind of 
\f2\fs22 \cf3 \cb4 FruitTree
\f1\fs28 \cf2 \cb1 , of any age.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
There is a 
\f2\fs22 \cf3 \cb4 TreeGrove#age!
\f1\fs28 \cf2 \cb1  method will will age each tree in the grove one year by calling 
\f2\fs22 \cf3 \cb4 age!
\f1\fs28 \cf2 \cb1  on each 
\f2\fs22 \cf3 \cb4 FruitTree
\f1\fs28 \cf2 \cb1 .\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
There is a 
\f2\fs22 \cf3 \cb4 TreeGrove#trees
\f1\fs28 \cf2 \cb1  method which returns all trees\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4.	}\expnd0\expndtw0\kerning0
There is a 
\f2\fs22 \cf3 \cb4 TreeGrove#mature_trees
\f1\fs28 \cf2 \cb1  method which returns all trees that can currently bear fruit\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5.	}\expnd0\expndtw0\kerning0
There is a 
\f2\fs22 \cf3 \cb4 TreeGrove#dead_trees
\f1\fs28 \cf2 \cb1  method which returns all dead trees\
\pard\pardeftab720\sl360\partightenfactor0

\fs26 \cf2 \
}