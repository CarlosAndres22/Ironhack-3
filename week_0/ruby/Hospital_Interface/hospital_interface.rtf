{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Medium;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red242\green242\blue242;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww18260\viewh16580\viewkind0
\deftab720
\pard\pardeftab720\sl400\sa200

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You'll be building an interface for a hospital. The main components are: the actual hospital, employees (janitors, receptionists, and doctors), and patients.\
The goal of this challenge is to explore the utility of object-oriented design. You will be building multiple classes and will have to define their interfaces.\
This is a fairly open-ended challenge. The expectations are loose, so you will be making most of the decisions about how to design and build your program. Talk it out with your pair. Go to the whiteboard. Argue about names. Have fun!
\fs54 \
\pard\pardeftab720\sl600\sa200

\f1\fs48 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Learning Goals\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls1\ilvl0
\f0\fs28 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Object Oriented Design\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Proper Naming\cb1 \
\pard\pardeftab720\sl600\sa200

\f1\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 As you are coding, ask yourself...\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls2\ilvl0
\f0\fs28 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 How will I use this class?\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 How will this class interact with the other classes?\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Does this attribute need to be private or public?\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Are my methods and variables well named?\cb1 \
\pard\pardeftab720\sl800\sa200

\f1\fs60 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Objectives\
\pard\pardeftab720\sl600\sa200

\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Create the Hospital\
\pard\pardeftab720\sl400\sa200

\f0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Write the code that will create a new hospital object.\
What types of attributes or accessors will be needed?\
For example, you'll definitely need a name for the hospital. You can also add its location, number of employees, and number of patients.\
\pard\pardeftab720\sl600\sa200

\f1 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Create the Patients\
\pard\pardeftab720\sl400\sa200

\f0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Your patients will be stored in the hospital database. (Don't worry about creating a database - just have a way for the hospital to store the patient's records).\
Can you think of anything they might inherit from the hospital, or is inheritance not needed here? These design decisions are up to you.\

\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Create the Employees\

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 There are multiple types of employees, and you're free to create your own.\
A few obvious examples are doctors, receptionists, and janitors. What attributes and methods might they all share? What will be different for each?\
\pard\pardeftab720\sl600\sa200

\f1 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Build Authentication System\
\pard\pardeftab720\sl400\sa200

\f0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Now imagine you're delivering this software and it's going to run as a Ruby file in Terminal.\
You're going to create a single administrator who can add employees and patients, and only this administrator is allowed to create these objects in the system.\
You also want to allow the created employees and patients to login and access their medical records. However, a janitor logging in will not be able to access sensitive patient data.\
An example of how this interface might look (this is just an idea - you are welcome to implement this feature however you think is best):
\fs54 \
\pard\pardeftab720\sl320

\f2\fs24 \cf2 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 $ ruby hospital.rb\
> Welcome to Misty River Hospital\
> -------------------------------\
> Please enter your username:\
> ruby_tuesday\
> Please enter your password:\
> ********\
> -------------------------------\
> Welcome, ruby_tuesday.  Your access level is: DOCTOR\
> -------------------------------\
> What would you like to do?\
> Options:\
> - list_patients\
> - view_records <patient_id>\
> - add_record <patient_id>\
> - remove_record <patient_id> <record_id>\
}